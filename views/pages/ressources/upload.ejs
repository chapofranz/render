<div class="container-flex main-container" id="upload">
    <div class="container-fluid headline">
        <h1>
            Upload
        </h1>
    </div>
    <% if (typeof message !=='undefined' && message) { %>
        <div id="myModal" class="modal">
            <div class="modal-content">
                <span class="close">&times;</span>
                <p class="<%= messageClass %>">
                    <%= message %>
                </p>
            </div>
        </div>
        <% } %>
            <div class="wrapper-grid">
                <form class="wrapper upload" id="upload-form" action="/upload/new" method="post"
                    enctype="multipart/form-data">
                    <div class="nested">
                        <label for="name" id="label">Name</label>
                        <input id="Dateiname-input" type="text" v-model="name" :class="{'is-invalid': invalidName}"
                            placeholder="Dateiname" name="name" class="upload-form" required>
                        <div class="invalid-feedback" v-if="invalidName">Max 25 Zeichen, _ - Buchstaben und Zahlen!
                        </div>
                    </div>
                    <div class="nested">
                        <label for="kategorie" id="label">Kategorie</label>
                        <select id="Kategorie-selector" name="kategorie" class="nested upload-form" required>
                            <option value="Bitte auswählen">Bitte auswählen</option>
                            <option value="Skript">Skript</option>
                            <option value="Anleitung">Anleitung</option>
                        </select>
                    </div>
                    <div class="nested">
                        <label for="studiengang" id="label">Studiengang</label>
                        <select name="studiengang" id="studiengang" class="upload-form" required
                            onchange="updateModule(this.value)">
                            <option value="Studiengang wählen">Wählen einen Studiengang aus</option>
                            <% studiengaenge.forEach(function(studiengang) { %>
                                <option value="<%= studiengang.id %>">
                                    <%= studiengang.name %> (<%= studiengang.id %>)
                                </option>
                                <% }); %>
                        </select>
                    </div>
                    <div class="nested">
                        <label for="modul" id="label">Modul</label>
                        <select name="modul" id="modul" class="upload-form" required>
                            <option value="Modul">Wählen ein Modul aus</option>
                            <!-- Module options werden hier reingeladen! -->
                        </select>
                    </div>
                    <div class="nested">
                        <label for="beschreibung" id="label">Beschreibung</label>
                        <input id="Beschreibung-input " type="text" placeholder="Beschreibung des Inhalts"
                            name="beschreibung" class="upload-form" required>
                    </div>
                    <div class="nested">
                        <label for="author" id="label">Author</label>
                        <input id="Author-input" type="text" placeholder="Name des Authors" name="author"
                            class="upload-form" required>
                    </div>
                    <div class="nested">
                        <label for="pfad" id="label">Dokument</label>
                        <input id="Dokument-selection" type="file" placeholder="Datei aus Verzeichniss wählen"
                            name="data" required>
                    </div>
                    <div class="nested">
                        <label for="upload-button" id="label">Jetzt hochladen</label>
                        <button type="submit" class="btn btn-primary" id="upload-button">Upload</button>
                    </div>

                </form>
            </div>
</div>

<script>
    const { createApp } = Vue;

    createApp({
        data() {
            return {
                name: '',
                invalidName: false,
            }


        },
        methods: {
            validName: function (name) {
                let re = /^[0-9a-zA-Z\s_-]{1,25}$/;;
                return re.test(name);
            },
            showModal: function () {
                let modal = document.getElementById("myModal");
                let span = document.getElementsByClassName("close")[0];
                if (modal) {
                    modal.style.display = "block";
                    setTimeout(() => modal.style.display = "none", 3500);  // Modal wird nach 3 Sekunden geschlossen

                    span.onclick = function () {
                        modal.style.display = "none";
                    }

                    window.onclick = function (event) {
                        if (event.target == modal) {
                            modal.style.display = "none";
                        }
                    }
                }
            }
        },

        watch: {
            name: function (newName) {
                this.invalidName = !this.validName(newName);
            }

        },
        mounted: function () {
            this.showModal();
        }


    }).mount("#upload");

    function updateModule(studiengangId) {
        // Fetch modules für den ausgewählen studiengang
        fetch('/studiengang/' + studiengangId + '/module')
            .then(response => {
                // Prüfen, ob die Antwort ok ist
                if (!response.ok) {
                    throw new Error("Netzwerkantwort war nicht ok");
                }
                return response.json();
            })
            .then(module => {
                // Prüfen, ob module null ist
                if (module === null) {
                    throw new Error("Module sind null");
                }

                const modulDropdown = document.getElementById('modul');
                modulDropdown.innerHTML = '';

                // Modul optionen hinzufügen! 
                module.forEach(modul => {
                    const option = document.createElement('option');
                    option.value = modul.id;
                    option.text = modul.name + ' (' + modul.id + ')';
                    modulDropdown.add(option);
                });
            })
            .catch(error => {
                console.error('Es gab ein Problem mit Ihrer fetch Operation: ', error);

                const modulDropdown = document.getElementById('modul');
                modulDropdown.innerHTML = '';

                // Platzhalteroption hinzufügen, um den Benutzer zu informieren, dass keine Module geladen werden konnten
                const option = document.createElement('option');
                option.text = 'Module konnten nicht geladen werden';
                modulDropdown.add(option);
            });
    }

</script>