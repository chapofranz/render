<script>
    window.userId = '<%= req.me.id %>';
</script>
<% if (req.me) { %>
    <div class="container-flex main-container">
        <div class="container-fluid headline">
            <h1>
                Ressourcen
            </h1>
        </div>
        <div class="container-flex studiums-auswahl">
            <a href="/studiengang">
                <button class="yellow-button">Studiengang wählen ></button>
            </a>
        </div>
        <div class="container-flex top-10-downloads-headline">
            <h1>Top 10 Downloads</h1>
        </div>
        <div class="container-flex top-10-downloads">
            <div id="topDownloadsApp">
                <div v-for="item in topDownloads" :key="item.id" class="list-items">
                    <h5 class="card-title">
                        <a>{{ item.name
                            }}</a>
                        (Autor: {{ item.author }})
                        <br>
                        <a>Beschreibung: {{item.beschreibung}}</a>
                    </h5>
                    <p> Bewertung abgeben: </p>
                    <div class="stars mb-2">
                        <i v-for="n in 5" :key="n" class="star"
                            :class="{ 'star-selected': n <= item.averageRating, 'star-hover': n <= item.tempRating }"
                            @click="updateRating(n, item, item.type)" @mouseover="item.tempRating = n"
                            @mouseout="item.tempRating = item.averageRating">
                            ★
                        </i>
                    </div>
                    <p v-if="item.averageRating">Durchschnittsbewertung: {{ item.averageRating.toFixed(2) }}</p>
                    <a :href="'/downloadFile?filename=' + item.data" class="btn btn-sm btn-primary">Download</a>
                </div>
            </div>
        </div>
        <div class="container-flex top-10-downloads-headline">
            <h1>Neueste Ressourcen</h1>
        </div>
        <div class="container-flex top-10-downloads">
            <div id="newestResourcesApp">
                <div v-for="item in newestResources" :key="item.id" class="list-items">
                    <h5 class="card-title">
                        <a>{{ item.name }}</a>
                        (Autor: {{ item.author }})
                        <br>
                        <a>Beschreibung: {{item.beschreibung}}</a>
                    </h5>
                    <p> Bewertung abgeben: </p>
                    <div class="stars mb-2">
                        <i v-for="n in 5" :key="n" class="star"
                            :class="{ 'star-selected': n <= item.averageRating, 'star-hover': n <= item.tempRating }"
                            @click="updateRating(n, item, item.type)" @mouseover="item.tempRating = n"
                            @mouseout="item.tempRating = item.averageRating">
                            ★
                        </i>
                    </div>
                    <p v-if="item.averageRating">Durchschnittsbewertung: {{ item.averageRating.toFixed(2) }}</p>
                    <a :href="'/downloadFile?filename=' + item.data" class="btn btn-sm btn-primary">Download</a>
                </div>
            </div>
        </div>


    </div>
    <% } else { %>

        <div class="container-flex main-container">
            <div class="container-fluid headline">
                <h1>
                    Ressourcen
                </h1>
            </div>
            <div class="container-flex textbox" id="call-to-action-2">
                Sie benötigen einen Account um auf “Ressourcen” zuzugreifen
                <div class="container-flex studiums-auswahl">
                    <a href="/signup">
                        <button class="red-button">Jetzt registrieren ></button>
                    </a>
                    <a href="/login">
                        <button class="red-button">Jetzt einloggen ></button>
                    </a>
                </div>
            </div>
        </div>

        <% } %>

            <script>
                const userId = window.userId;

                const createApp = Vue.createApp({
                    data() {
                        return {

                            topDownloads: []
                        };
                    },
                    methods: {
                        updateRating: function (rating, item, type) {
                            const data = {
                                userId: window.userId,
                                itemId: item.id,
                                bewertung: rating,
                                type: type
                            };

                            console.log("Sending data: ", data);

                            fetch('/bewertung/create', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(data)
                            })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error(`HTTP error! status: ${response.status}`);
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    console.log("Received data: ", data);
                                    item.averageRating = data.averageRating;
                                })
                                .catch(e => {
                                    console.log("There was a problem with the fetch operation: " + e.message);
                                });
                        }
                    },
                    created() {
                        fetch('/api/topdownloads')
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error(`HTTP error! status: ${response.status}`);
                                }
                                return response.json();
                            })
                            .then(data => {
                                this.topDownloads = data.map(item => ({ ...item, tempRating: item.averageRating || 0, type: item.type }));

                            })
                            .catch(e => {
                                console.log("There was a problem with the fetch operation: " + e.message);
                            });
                    }
                });

                createApp.mount('#topDownloadsApp');


                const newestResourcesApp = Vue.createApp({
                    data() {
                        return {
                            newestResources: []
                        };
                    },
                    methods: {
                        updateRating: function (rating, item, type) {
                            const data = {
                                userId: window.userId,
                                itemId: item.id,
                                bewertung: rating,
                                type: type
                            };

                            console.log("Sending data: ", data);

                            fetch('/bewertung/create', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(data)
                            })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error(`HTTP error! status: ${response.status}`);
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    console.log("Received data: ", data);
                                    item.averageRating = data.averageRating;
                                })
                                .catch(e => {
                                    console.log("There was a problem with the fetch operation: " + e.message);
                                });
                        }
                    },
                    created() {
                        fetch('/api/newestresources')
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error(`HTTP error! status: ${response.status}`);
                                }
                                return response.json();
                            })
                            .then(data => {
                                this.newestResources = data.map(item => ({ ...item, tempRating: item.averageRating || 0, type: item.type }));
                            })
                            .catch(e => {
                                console.log("There was a problem with the fetch operation: " + e.message);
                            });
                    }
                });

                newestResourcesApp.mount('#newestResourcesApp');

            </script>